// import { useContext } from "react";
// import PropsContext from "./PropsContext";
// import PropTypes from "prop-types";
import "./Logo.css";

const Logo = () => {
  // const { color1, color2, color3, color4, stroke } = useContext(PropsContext);

  // // Define a function to adjust the colors
  // const adjustColor = (color) => {
  //   const { h, s, l } = color;
  //   const limitedL = Math.max(30, Math.min(70, l));
  //   const limitedS = Math.max(30, Math.min(70, s));
  //   const darkModeS = Math.max(70, Math.min(90, s));
  //   const darkModeL = Math.max(80, Math.min(99, l));

  //   // Replace this conditional logic with whatever conditions you need
  //   if (stroke && !stroke.fill) {
  //     return { h, s: 0, l: 100, a: 1 };
  //   }

  //   if (stroke.isDarkMode) {
  //     // Assuming `isDarkMode` is part of stroke object for this example
  //     return { h, s: darkModeS, l: darkModeL, a: 1 };
  //   }

  //   return { h, s: limitedS, l: limitedL, a: 1 };
  // };

  const color1 = { h: 0, s: 100, l: 30, a: 1 };
  const color2 = { h: 120, s: 100, l: 50, a: 1 };
  const color3 = { h: 240, s: 100, l: 20, a: 1 };
  const color4 = { h: 360, s: 100, l: 40, a: 1 };

  const { h: h1, s: s1, l: l1, a: a1 } = color1;
  const { h: h2, s: s2, l: l2, a: a2 } = color2;
  const { h: h3, s: s3, l: l3, a: a3 } = color3;
  const { h: h4, s: s4, l: l4, a: a4 } = color4;

  return (
    <div className="logo">
      <svg
        className="logo-svg"
        width="140"
        height="80"
        viewBox="0 0 140 80"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        mask="url(#logo-mask)"
      >
        <defs>
          <radialGradient
            id="grad1"
            cx="50%"
            cy="50%"
            r="50%"
            fx="50%"
            fy="50%"
          >
            <stop
              offset="0%"
              style={{
                stopColor: `hsla(${h1}, ${s1}%, ${l1}%, ${a1})`,
                stopOpacity: 1,
              }}
            />
            <stop
              offset="100%"
              style={{
                stopColor: `hsla(${h1}, ${s1}%, ${l1}%, ${a1})`,
                stopOpacity: 0,
              }}
            />
          </radialGradient>
          <radialGradient
            id="grad2"
            cx="50%"
            cy="50%"
            r="50%"
            fx="50%"
            fy="50%"
          >
            <stop
              offset="0%"
              style={{
                stopColor: `hsla(${h2}, ${s2}%, ${l2}%, ${a2})`,
                stopOpacity: 1,
              }}
            />
            <stop
              offset="100%"
              style={{
                stopColor: `hsla(${h2}, ${s2}%, ${l2}%, ${a2})`,
                stopOpacity: 0,
              }}
            />
          </radialGradient>
          <radialGradient
            id="grad3"
            cx="50%"
            cy="50%"
            r="50%"
            fx="50%"
            fy="50%"
          >
            <stop
              offset="0%"
              style={{
                stopColor: `hsla(${h3}, ${s3}%, ${l3}%, ${a3})`,
                stopOpacity: 1,
              }}
            />
            <stop
              offset="100%"
              style={{
                stopColor: `hsla(${h3}, ${s3}%, ${l3}%, ${a3})`,
                stopOpacity: 0,
              }}
            />
          </radialGradient>
          <radialGradient
            id="grad4"
            cx="50%"
            cy="50%"
            r="50%"
            fx="50%"
            fy="50%"
          >
            <stop
              offset="0%"
              style={{
                stopColor: `hsla(${h4}, ${s4}%, ${l4}%, ${a4})`,
                stopOpacity: 1,
              }}
            />
            <stop
              offset="100%"
              style={{
                stopColor: `hsla(${h4}, ${s4}%, ${l4}%, ${a4})`,
                stopOpacity: 0,
              }}
            />
          </radialGradient>
          <filter id="blur" x="-50%" y="-50%" width="200%" height="200%">
            <feGaussianBlur in="SourceGraphic" stdDeviation="5" />
          </filter>

          <filter id="petal-blur" x="-50%" y="-50%" width="200%" height="200%">
            <feGaussianBlur in="SourceGraphic" stdDeviation="3" />
          </filter>
          <filter id="high-saturation">
            <feColorMatrix type="saturate" values="4" />
          </filter>
          <mask id="logo-mask">
            <g className="petals-container">
              <path
                d="M14.3697 42.1314C17.2904 42.5636 17.5922 44.3863 23.5579 45.2691C25.5465 45.5633 30.5797 44.5934 34.9918 45.2463C39.9011 45.9727 42.194 49.3601 41.2377 55.8229C37.9552 78.0078 17.0959 61.9033 16.011 69.2361C14.7696 77.6253 17.2598 77.1047 16.3587 83.1947C15.8254 86.799 12.8267 87.7524 9.471 87.2558C5.12102 86.6122 3.27704 84.0532 3.7 81.1947C4.27928 77.2797 8.28751 71.6495 10.1816 58.8481C11 53.3174 10.9994 49.8882 10.014 47.9643C9.56503 47.1358 9.28634 46.015 9.46105 44.8343C9.7277 43.0322 11.1383 41.6533 14.3697 42.1314ZM23.0528 52.1162C21.0021 51.8127 18.9977 52.9132 18.4092 56.8903C18.115 58.8789 18.6517 61.6889 21.0132 62.0384C22.9396 62.3234 25.7563 60.4541 26.3723 56.2905C26.6758 54.2398 25.7249 52.5115 23.0528 52.1162Z"
                fill="#ffffff"
              />
              <path
                d="M53.902 73.0596C56.2136 72.6912 58.7926 71.7973 58.5129 70.0422C58.2946 68.6724 56.8361 68.3342 55.6802 68.5184C53.0262 68.9414 51.789 70.5432 52.0141 71.9558C52.1301 72.6836 52.8318 73.2302 53.902 73.0596ZM51.747 55.4061C57.9541 54.4169 61.6658 57.6003 62.7164 64.1927C64.6607 76.3929 52.8553 73.9287 53.4147 77.439C53.6262 78.766 55.256 79.0769 56.2834 78.9132C58.5094 78.5584 60.7621 76.4436 61.23 75.7984C62.1296 74.5577 62.5224 73.4416 63.4641 73.2915C63.9778 73.2096 64.3389 73.5471 64.4276 74.1036C65.3963 80.1823 60.5471 83.6328 56.0095 84.3559C48.0473 85.6249 42.9553 80.1155 41.4885 70.9118C40.1582 62.5643 42.7573 56.8388 51.747 55.4061Z"
                fill="#ffffff"
              />
              <path
                d="M84.5162 28.6071C90.0163 29.4089 84.7659 39.9712 89.644 40.1725C90.7201 40.2169 92.1696 39.9174 93.3892 39.9677C94.6804 40.021 95.5953 40.4899 95.5272 42.1398C95.3437 46.5875 83.7127 44.5986 83.2243 56.4352C83.0615 60.3808 84.7211 61.9583 86.371 62.0264C88.3796 62.1093 90.3454 59.7471 91.9237 59.8123C93.5019 59.8774 94.1815 62.5642 94.1075 64.3576C93.7553 72.8944 87.0489 75.2046 79.9469 74.9116C69.2581 74.4706 65.7652 70.3023 65.9813 65.0655C66.2417 58.7527 71.3648 51.2751 71.5217 47.473C71.6697 43.8861 66.5386 46.3332 66.6925 42.6029C66.8523 38.7291 75.1996 43.6725 80.0669 31.9447C80.7118 30.2466 82.0771 28.5065 84.5162 28.6071Z"
                fill="#ffffff"
              />
              <path
                d="M103.777 45.1117C109.969 43.0412 112.962 44.5343 113.81 47.0698C114.397 48.8251 114.041 51.0041 114.726 53.052C115.476 55.295 117.087 57.6834 118.861 59.9092C122.768 64.9457 129.111 67.0535 130.333 70.7105C131.149 73.1485 129.233 76.4994 126.259 77.4939C123.918 78.2764 119.789 78.5729 118.778 75.5497C118.468 74.6233 118.451 73.599 118.142 72.6726C117.392 70.4296 114.659 69.5542 111.441 70.6302C108.711 71.5431 106.843 73.5771 107.658 76.0151C108.066 77.2341 108.83 77.9 109.124 78.7777C109.955 81.2644 107.828 83.6563 104.951 84.6182C101.635 85.7268 99.0816 84.7374 98.2175 82.1531C96.3916 76.692 101.6 65.1926 99.3992 58.6101C98.796 56.8059 97.0873 55.1004 96.4515 53.1987C95.5874 50.6145 96.7551 47.4593 103.777 45.1117ZM111.969 61.5088C111.497 60.0948 109.706 57.1699 107.706 57.8383C106.146 58.36 104.848 61.1251 105.81 64.0019C106.315 65.5135 107.959 67.1866 110.153 66.453C112.006 65.8335 112.67 63.6055 111.969 61.5088Z"
                fill="#ffffff"
              />
              <path
                d="M133.138 24.7724C133.715 20.2313 136.444 16.4124 141.679 17.0778C145.652 17.5828 148.02 20.127 147.435 24.7311C146.457 32.4256 135.583 36.2986 134.332 46.1374C133.971 48.9756 135.213 50.7997 138.178 51.1765C144.422 51.9702 148.034 47.7509 150.935 48.1197C152.89 48.3682 154.344 51.0524 154.071 53.1967C153.133 60.5759 141.652 64.1795 126.957 62.3116C123.74 61.9028 122.931 60.1978 123.18 58.2426C124.583 47.2054 130.717 43.8194 133.138 24.7724Z"
                fill="#ffffff"
              />
              <path
                d="M166.139 42.3296C170.803 41.5741 175.217 42.5278 175.841 46.3789C176.007 47.4059 175.49 48.2801 174.634 48.4187C172.666 48.7375 173.051 45.4255 168.558 46.1533C167.531 46.3197 166.53 47.1845 166.717 48.3399C167.375 52.4049 177.022 49.8763 178.491 58.9478C179.829 67.2063 175.044 71.0114 169.824 71.857C163.619 72.8621 159.527 70.0998 158.834 65.8207C158.598 64.3659 159.07 62.4011 160.44 62.1793C161.766 61.9644 161.826 64.5017 165.463 63.9126C166.789 63.6977 167.678 62.6755 167.449 61.2634C166.687 56.5565 160.057 60.0895 158.657 51.4459C157.978 47.2525 160.533 43.2377 166.139 42.3296Z"
                fill="#ffffff"
              />
            </g>
          </mask>
          <mask id="logo-mask-blurry">
            <g className="petals-container">
              <path
                d="M14.3697 42.1314C17.2904 42.5636 17.5922 44.3863 23.5579 45.2691C25.5465 45.5633 30.5797 44.5934 34.9918 45.2463C39.9011 45.9727 42.194 49.3601 41.2377 55.8229C37.9552 78.0078 17.0959 61.9033 16.011 69.2361C14.7696 77.6253 17.2598 77.1047 16.3587 83.1947C15.8254 86.799 12.8267 87.7524 9.471 87.2558C5.12102 86.6122 3.27704 84.0532 3.7 81.1947C4.27928 77.2797 8.28751 71.6495 10.1816 58.8481C11 53.3174 10.9994 49.8882 10.014 47.9643C9.56503 47.1358 9.28634 46.015 9.46105 44.8343C9.7277 43.0322 11.1383 41.6533 14.3697 42.1314ZM23.0528 52.1162C21.0021 51.8127 18.9977 52.9132 18.4092 56.8903C18.115 58.8789 18.6517 61.6889 21.0132 62.0384C22.9396 62.3234 25.7563 60.4541 26.3723 56.2905C26.6758 54.2398 25.7249 52.5115 23.0528 52.1162Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
              <path
                d="M53.902 73.0596C56.2136 72.6912 58.7926 71.7973 58.5129 70.0422C58.2946 68.6724 56.8361 68.3342 55.6802 68.5184C53.0262 68.9414 51.789 70.5432 52.0141 71.9558C52.1301 72.6836 52.8318 73.2302 53.902 73.0596ZM51.747 55.4061C57.9541 54.4169 61.6658 57.6003 62.7164 64.1927C64.6607 76.3929 52.8553 73.9287 53.4147 77.439C53.6262 78.766 55.256 79.0769 56.2834 78.9132C58.5094 78.5584 60.7621 76.4436 61.23 75.7984C62.1296 74.5577 62.5224 73.4416 63.4641 73.2915C63.9778 73.2096 64.3389 73.5471 64.4276 74.1036C65.3963 80.1823 60.5471 83.6328 56.0095 84.3559C48.0473 85.6249 42.9553 80.1155 41.4885 70.9118C40.1582 62.5643 42.7573 56.8388 51.747 55.4061Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
              <path
                d="M84.5162 28.6071C90.0163 29.4089 84.7659 39.9712 89.644 40.1725C90.7201 40.2169 92.1696 39.9174 93.3892 39.9677C94.6804 40.021 95.5953 40.4899 95.5272 42.1398C95.3437 46.5875 83.7127 44.5986 83.2243 56.4352C83.0615 60.3808 84.7211 61.9583 86.371 62.0264C88.3796 62.1093 90.3454 59.7471 91.9237 59.8123C93.5019 59.8774 94.1815 62.5642 94.1075 64.3576C93.7553 72.8944 87.0489 75.2046 79.9469 74.9116C69.2581 74.4706 65.7652 70.3023 65.9813 65.0655C66.2417 58.7527 71.3648 51.2751 71.5217 47.473C71.6697 43.8861 66.5386 46.3332 66.6925 42.6029C66.8523 38.7291 75.1996 43.6725 80.0669 31.9447C80.7118 30.2466 82.0771 28.5065 84.5162 28.6071Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
              <path
                d="M103.777 45.1117C109.969 43.0412 112.962 44.5343 113.81 47.0698C114.397 48.8251 114.041 51.0041 114.726 53.052C115.476 55.295 117.087 57.6834 118.861 59.9092C122.768 64.9457 129.111 67.0535 130.333 70.7105C131.149 73.1485 129.233 76.4994 126.259 77.4939C123.918 78.2764 119.789 78.5729 118.778 75.5497C118.468 74.6233 118.451 73.599 118.142 72.6726C117.392 70.4296 114.659 69.5542 111.441 70.6302C108.711 71.5431 106.843 73.5771 107.658 76.0151C108.066 77.2341 108.83 77.9 109.124 78.7777C109.955 81.2644 107.828 83.6563 104.951 84.6182C101.635 85.7268 99.0816 84.7374 98.2175 82.1531C96.3916 76.692 101.6 65.1926 99.3992 58.6101C98.796 56.8059 97.0873 55.1004 96.4515 53.1987C95.5874 50.6145 96.7551 47.4593 103.777 45.1117ZM111.969 61.5088C111.497 60.0948 109.706 57.1699 107.706 57.8383C106.146 58.36 104.848 61.1251 105.81 64.0019C106.315 65.5135 107.959 67.1866 110.153 66.453C112.006 65.8335 112.67 63.6055 111.969 61.5088Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
              <path
                d="M133.138 24.7724C133.715 20.2313 136.444 16.4124 141.679 17.0778C145.652 17.5828 148.02 20.127 147.435 24.7311C146.457 32.4256 135.583 36.2986 134.332 46.1374C133.971 48.9756 135.213 50.7997 138.178 51.1765C144.422 51.9702 148.034 47.7509 150.935 48.1197C152.89 48.3682 154.344 51.0524 154.071 53.1967C153.133 60.5759 141.652 64.1795 126.957 62.3116C123.74 61.9028 122.931 60.1978 123.18 58.2426C124.583 47.2054 130.717 43.8194 133.138 24.7724Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
              <path
                d="M166.139 42.3296C170.803 41.5741 175.217 42.5278 175.841 46.3789C176.007 47.4059 175.49 48.2801 174.634 48.4187C172.666 48.7375 173.051 45.4255 168.558 46.1533C167.531 46.3197 166.53 47.1845 166.717 48.3399C167.375 52.4049 177.022 49.8763 178.491 58.9478C179.829 67.2063 175.044 71.0114 169.824 71.857C163.619 72.8621 159.527 70.0998 158.834 65.8207C158.598 64.3659 159.07 62.4011 160.44 62.1793C161.766 61.9644 161.826 64.5017 165.463 63.9126C166.789 63.6977 167.678 62.6755 167.449 61.2634C166.687 56.5565 160.057 60.0895 158.657 51.4459C157.978 47.2525 160.533 43.2377 166.139 42.3296Z"
                fill="#fff"
                filter="url(#petal-blur)"
              />
            </g>
          </mask>
        </defs>
        <g
          className="logo-mask-blurry"
          mask="url(#logo-mask-blurry)"
          opacity={0.3}
        >
          <g className="logo-animation-blur">
            <circle
              cx="20"
              cy="25"
              r="96"
              fill="url(#grad1)"
              filter="url(#high-saturation)"
            />
            <circle
              cx="50"
              cy="85"
              r="96"
              fill="url(#grad2)"
              filter="url(#high-saturation)"
            />
            <circle
              cx="20"
              cy="85"
              r="96"
              fill="url(#grad3)"
              filter="url(#high-saturation)"
            />
            <circle
              cx="60"
              cy="35"
              r="96"
              fill="url(#grad4)"
              filter="url(#high-saturation)"
            />
          </g>
        </g>
        <g className="logo-mask" mask="url(#logo-mask)">
          <g className="logo-animation">
            <circle cx="50" cy="45" r="96" fill="url(#grad1)" />
            <circle cx="150" cy="135" r="96" fill="url(#grad2)" />
            <circle cx="50" cy="135" r="96" fill="url(#grad3)" />
            <circle cx="150" cy="45" r="96" fill="url(#grad4)" />
          </g>
        </g>

        <mask id="logo-mask">
          <rect x="0" y="0" width="140" height="80" fill="#fff" />
        </mask>
      </svg>
    </div>
  );
};

Logo.propTypes = {
  // layers: PropTypes.array.isRequired,
  // globals: PropTypes.object.isRequired,
};

export default Logo;

// const [color1, color2, color3, color4] = layers.map((layer) => {
//   const { h, s, l } = layer.color;
//   const limitedL = Math.max(30, Math.min(70, l));
//   const limitedS = Math.max(30, Math.min(70, s));
//   const darkModeS = Math.max(70, Math.min(90, s));
//   const darkModeL = Math.max(80, Math.min(99, l));

//   if (globals.isStroke && !globals.isFill) {
//     return { h, s: 0, l: 100, a: 1 };
//   }

//   if (globals.isDarkMode) {
//     return { h, s: darkModeS, l: darkModeL, a: 1 };
//   }

//   return { h, s: limitedS, l: limitedL, a: 1 };
// });
